# This is a basic workflow to help you get started with Actions

name: glog.ai

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  # push:
  #   branches: [ "master" ]
  # pull_request:
  #   branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  glog-scan:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # container: ghcr.io/vjelic/glog-scan-java

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
     
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'maven'

      - name: Compile project
        run: mvn clean compile -DskipTests

      - name: Authenticate to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Pull Glog Java image
        run: docker pull ghcr.io/vjelic/glog-scan-java@sha256:1b79283937ecc1329cea0583b2e3284ef641895812ecb4d323d5a5fbd0689657

      - name: Pull Glog Resolver image
        run: docker pull ghcr.io/vjelic/glog-scan-resolver@sha256:9a8a951a9df0ec8d4488232b6f9652acd3c72ea091c06a48cc7a350c4b20f87f

      - name: Clean directories
        run: |
          [ -d $GITHUB_WORKSPACE/.glog ] && rm $GITHUB_WORKSPACE/.glog/*
          [ -d $GITHUB_WORKSPACE/.glog-log ] && rm $GITHUB_WORKSPACE/.glog-log/*
          echo "Cleaned"

      - name: Execute Java scan
        run: docker run --rm -e GLOGSERVICE=${{ secrets.GLOG_TOKEN }} -e HOST_UID=$(id -u) -e HOST_GID=$(id -g) -e IGNORE="$ignore" -v "$GITHUB_WORKSPACE:/app:rw" -v "$GITHUB_WORKSPACE/.glog:/.glog:rw" "ghcr.io/vjelic/glog-scan-java@sha256:1b79283937ecc1329cea0583b2e3284ef641895812ecb4d323d5a5fbd0689657"

      - name: Execute Glog resolver
        run: docker run --rm -e GLOGSERVICE=${{ secrets.GLOG_TOKEN }} -e HOST_UID=$(id -u) -e HOST_GID=$(id -g) -e IGNORE="$ignore" -v "$GITHUB_WORKSPACE:/app:rw" -v "$GITHUB_WORKSPACE/.glog:/.glog:rw" "ghcr.io/vjelic/glog-scan-resolver@sha256:9a8a951a9df0ec8d4488232b6f9652acd3c72ea091c06a48cc7a350c4b20f87f"
                     
      - name: Commit reports
        run: |
          git config --global user.name ${{ github.actor }}
          git config --global user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"
          rm -f $GITHUB_WORKSPACE/.glog/glog-scan-java*.sarif
          git add .
          git commit -am "Scan executed"
          git push

      - name: Upload report
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: .glog/glog-scan.sarif
          category: my-analysis-tool

        
          
